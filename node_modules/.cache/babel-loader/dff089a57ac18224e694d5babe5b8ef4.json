{"ast":null,"code":"var _jsxFileName = \"/var/www/html/grim/my-new-app/src/App.tsx\";\nimport React, { useState } from 'react';\nimport CustomToDos from './customHooks';\n\nconst handleSubmit = (e, todos, setTodos, input) => {\n  e.preventDefault();\n  setTodos([...todos, {\n    item: input,\n    isCompleted: false\n  }]);\n};\n\nfunction App() {\n  const [todos, setTodos] = useState([{\n    item: \"timesheet\",\n    isCompleted: false\n  }]);\n  const [input, setInput] = useState(\"\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e, todos, setTodos, input),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setInput(e.target.value),\n    value: input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Add Item\")), todos.map(todo => /*#__PURE__*/React.createElement(CustomToDos, {\n    todoItem: todo.item,\n    status: todo.isCompleted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;\n{\n  /* Total ToDos Remaining : {} out of {} */\n}\n{\n  /* <h1>hgfgh</h1> */\n}\n{\n  /* <button onClick={text=>setTodos([{text,completed:false},...todos])}> Add </button> */\n}","map":{"version":3,"sources":["/var/www/html/grim/my-new-app/src/App.tsx"],"names":["React","useState","CustomToDos","handleSubmit","e","todos","setTodos","input","preventDefault","item","isCompleted","App","setInput","target","value","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAY,GAAC,CAACC,CAAD,EAAGC,KAAH,EAASC,QAAT,EAAkBC,KAAlB,KAA0B;AAC3CH,EAAAA,CAAC,CAACI,cAAF;AACAF,EAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAU;AAACI,IAAAA,IAAI,EAAEF,KAAP;AAAaG,IAAAA,WAAW,EAAC;AAAzB,GAAV,CAAD,CAAR;AACD,CAHD;;AAKA,SAASC,GAAT,GAAe;AACb,QAAM,CAACN,KAAD,EAAOC,QAAP,IAAkBL,QAAQ,CAAC,CAAC;AAACQ,IAAAA,IAAI,EAAE,WAAP;AAAmBC,IAAAA,WAAW,EAAC;AAA/B,GAAD,CAAD,CAAhC;AACA,QAAM,CAACH,KAAD,EAAOK,QAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAGG,CAAD,IAAKD,YAAY,CAACC,CAAD,EAAGC,KAAH,EAASC,QAAT,EAAkBC,KAAlB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,QAAQ,EAAGH,CAAD,IAAKQ,QAAQ,CAACR,CAAC,CAACS,MAAF,CAASC,KAAV,CAA9B;AAAgD,IAAA,KAAK,EAAEP,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,EAKGF,KAAK,CAACU,GAAN,CAAUC,IAAI,iBACb,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,IAAI,CAACP,IAA5B;AAAkC,IAAA,MAAM,EAAEO,IAAI,CAACN,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALH,CADF;AAaD;;AAED,eAAeC,GAAf;AACC;AAAC;AAA2C;AACvC;AAAC;AAAqB;AACtB;AAAC;AAAyF","sourcesContent":["import React, {useState} from 'react';\nimport CustomToDos from './customHooks'\n\nconst handleSubmit=(e,todos,setTodos,input)=>{\n  e.preventDefault()\n  setTodos([...todos,{item: input,isCompleted:false}])\n}\n\nfunction App() {\n  const [todos,setTodos]= useState([{item: \"timesheet\",isCompleted:false}])\n  const [input,setInput]= useState(\"\")\n  return (\n    <div className=\"App\">\n      <form onSubmit={(e)=>handleSubmit(e,todos,setTodos,input)}>\n        <input onChange={(e)=>setInput(e.target.value)} value={input}/>\n        <button>Add Item</button>\n      </form>\n      {todos.map(todo=>(\n        <CustomToDos todoItem={todo.item} status={todo.isCompleted} />\n      ))}\n     \n  \n    </div>\n  );\n}\n\nexport default App;\n {/* Total ToDos Remaining : {} out of {} */}\n      {/* <h1>hgfgh</h1> */}\n      {/* <button onClick={text=>setTodos([{text,completed:false},...todos])}> Add </button> */}\n      "]},"metadata":{},"sourceType":"module"}